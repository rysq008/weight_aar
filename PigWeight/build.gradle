apply plugin: 'com.android.library'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 28
        versionCode 2
        versionName "1.1.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

    implementation 'com.apeng:EsayPermissions:1.0.0'
    implementation 'com.squareup.okhttp3:okhttp:3.13.1'
    //导入RxJava 和 RxAndroid
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.6'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    //导入retrofit
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    //转换器，请求结果转换成Model
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    //配合Rxjava 使用
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.1'
    implementation 'com.github.zhaokaiqiang.klog:library:1.6.0'
    //高德定位
    compile 'com.amap.api:location:4.7.0'



}

//////// 打包发布 ////////
apply plugin: 'maven'

ext {
    // 从Github上clone下来的项目的本地地址
    GITHUB_REPO_PATH = "C:\\pig_weight_aar"//"C:\\insurance\\farm_pig_insurance\\farm_pig_insurance"/*"C:\\pig_farmer_aar"*/
    PUBLISH_GROUP_ID = 'com.innovationai.pigweight'
    PUBLISH_ARTIFACT_ID = 'pig_insurance_weight'
    PUBLISH_VERSION = android.defaultConfig.versionName/*'1.5.3'*/
}

uploadArchives {
    repositories.mavenDeployer {
        def deployPath = file(project.GITHUB_REPO_PATH)
        repository(url: "file://${deployPath.absolutePath}")
        pom.project {
            groupId project.PUBLISH_GROUP_ID
            artifactId project.PUBLISH_ARTIFACT_ID
            version project.PUBLISH_VERSION
        }
    }
}

// 源代码一起打包
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}
artifacts {
    archives androidSourcesJar
}
